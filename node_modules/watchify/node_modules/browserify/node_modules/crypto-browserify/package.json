{
  "author": {
    "name": "Dominic Tarr",
    "email": "dominic.tarr@gmail.com",
    "url": "dominictarr.com"
  },
  "name": "crypto-browserify",
  "description": "partial implementation of crypto for the browser",
  "version": "3.8.1",
  "homepage": "https://github.com/dominictarr/crypto-browserify",
  "repository": {
    "type": "git",
    "url": "git://github.com/dominictarr/crypto-browserify.git"
  },
  "scripts": {
    "test": "set -e; for t in test/node/*.js test/*.js; do node $t; done",
    "prepublish": "npm ls && npm test"
  },
  "engines": {
    "node": "*"
  },
  "dependencies": {
    "browserify-aes": "0.7.2",
    "create-ecdh": "1.0.1",
    "diffie-hellman": "2.2.2",
    "browserify-sign": "2.7.1",
    "pbkdf2-compat": "2.0.1",
    "public-encrypt": "1.1.0",
    "ripemd160": "0.2.0",
    "sha.js": "2.3.0"
  },
  "devDependencies": {
    "tape": "~2.3.2",
    "hash-test-vectors": "~1.3.0"
  },
  "testling": {
    "files": "test/*.js",
    "browsers": [
      "ie/latest",
      "chrome/latest",
      "firefox/latest",
      "safari/latest",
      "opera/latest"
    ]
  },
  "optionalDependencies": {},
  "browser": {
    "crypto": false
  },
  "license": "MIT",
  "readme": "# crypto-browserify\n\nA (partial) port of node's `crypto` module to the browser.\n\n[![travis](https://secure.travis-ci.org/dominictarr/crypto-browserify.png?branch=master)](https://travis-ci.org/dominictarr/crypto-browserify)\n\n[![browser support](http://ci.testling.com/dominictarr/crypto-browserify.png)](http://ci.testling.com/dominictarr/crypto-browserify)\n\nThe goal of this module is to reimplement node's crypto module,\nin pure javascript so that it can run in the browser.\n\nHere is the subset that is currently implemented:\n\n* createHash (sha1, sha224, sha256, sha384, sha512, md5, rmd160)\n* createHmac (sha1, sha224, sha256, sha384, sha512, md5, rmd160)\n* pbkdf2\n* pbkdf2Sync\n* randomBytes\n* createCipher (aes)\n* createDecipher (aes)\n* createDiffieHellman\n* createSign (rsa, ecdsa)\n* createVerify (rsa, ecdsa)\n* createECDH (secp256k1)\n* publicEncrypt/privateDecrypt (rsa)\n\n## todo\n\nthese features from node's `crypto` are still unimplemented.\n\n* createCredentials\n\n## contributions\n\nIf you are interested in writing a feature, please implement as a new module,\nwhich will be incorporated into crypto-browserify as a dependency.\n\nAll deps must be compatible with node's crypto\n(generate example inputs and outputs with node,\nand save base64 strings inside JSON, so that tests can run in the browser.\nsee [sha.js](https://github.com/dominictarr/sha.js)\n\nCrypto is _extra serious_ so please do not hesitate to review the code,\nand post comments if you do.\n\n## License\n\nMIT\n\n\n",
  "readmeFilename": "readme.markdown",
  "bugs": {
    "url": "https://github.com/dominictarr/crypto-browserify/issues"
  },
  "_id": "crypto-browserify@3.8.1",
  "_shasum": "dcae2d68c57994d53eb349cffc77893408a87635",
  "_from": "crypto-browserify@^3.0.0",
  "_resolved": "https://registry.npmjs.org/crypto-browserify/-/crypto-browserify-3.8.1.tgz"
}
